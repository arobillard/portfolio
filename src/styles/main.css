/* CSS Custom Properties AKA Variables */
:root {
  /* Colors */
  --color-primary: #23272e;
  --color-primary-light: #303641;
  --color-primary-dark: #21252c;
  --color-red: #d86972;
  --color-red-dark: #a94c54;
  --color-yellow: #e8e397;
  --color-yellow-light: #cfc75b;
  --color-orange: #bb8b5e;
  --color-green: #97c278;
  --color-green-medium: #bedfa5;
  --color-green-light: #c3e1ad;
  --color-green-lighter: #c6e3b0;
  --color-blue: #387bb2;
  --color-blue-light: #8eb9dd;
  --color-blue-dark: #2c6593;
  --color-purple: #c678dd;
  --color-night: #1b1241;
  --color-white: #f6fdf0;
  --color-bg: var(--color-primary);
  --color-text: var(--color-white);

  /* Typography */
  --font-primary: "Nunito Sans", sans-serif;
  --type-scale-h1: clamp(2.986rem, 9.744cqi, 6.758rem);
  --type-scale-h2: clamp(2.488rem, 7.406cqi, 4.915rem);
  --type-scale-h3: clamp(2.074rem, 5.648cqi, 3.574rem);
  --type-scale-h4: clamp(1.728rem, 4.328cqi, 2.6rem);
  --type-scale-h5: clamp(1.44rem, 3.331cqi, 1.891rem);
  --type-scale-h6: clamp(1.2rem, 2.575cqi, 1.375rem);
  --type-scale-s: 0.875rem;
  --type-scale-xs: 0.75rem;

  /* Sizing */
  --container: 70rem;
  --section-padding-block: clamp(3rem, 9vw, 6rem);
  --gap: clamp(1.5rem, 3vw, 3rem);

  /* Standardization */
  --transition: 0.3s;
  --shadow: 0 0.25rem 0.75rem #0004;
  --shadow-large: 0 0.5rem 1.5rem #0004;
  --radius: 0.5em;
}

.light-mode {
  --color-bg: var(--color-white);
  --color-text: var(--color-primary);
}

/*

CSS Reset
Adapted from: https://piccalil.li/blog/a-more-modern-css-reset/

*/

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  text-size-adjust: none;
  background-color: var(--color-bg);
  color: var(--color-text);
  font-family: var(--font-primary);
  line-height: 1.5;
  scroll-behavior: smooth;
  scroll-padding-block-start: var(--navbar-height, 3.728rem);

  /* transition:
    color var(--transition),
    background-color var(--transition); */
}

/* Remove default margin in favour of better control in authored CSS */
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
blockquote,
ol,
ul,
dl,
dd {
  margin: 0 0 1.5rem;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  margin: 0;
}

main {
  overflow: hidden;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a {
  transition: color var(--transition);
}

a:where(:not([class])) {
  text-decoration-skip-ink: auto;
  color: var(--color-green-light);
}

a:where(:not([class])):where(:hover, :focus-visible) {
  color: var(--color-highlight, var(--color-green));
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

svg {
  fill: currentcolor;
}

svg:not(:root) {
  overflow: hidden;
}

iframe {
  width: 100%;
  display: block;
  border: 0;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

label,
button {
  cursor: pointer;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ---------- Accessibility ---------- */

/* Focus Highlights */
*:focus-visible {
  outline: 0.125rem solid var(--color-highlight, var(--color-green));
  outline-offset: 0.125rem;
}

section:focus-visible {
  outline: 0;
}

/* Skip Links */

.skip-links {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

.skip-links__link {
  position: absolute;
  top: -10rem;
  left: 0.5rem;
  background-color: var(--color-green);
  color: var(--color-primary);
  padding: 0.75rem 1.5rem;
  text-decoration: none;
  border-radius: var(--radius);
  z-index: 100000;
}

.skip-links__link:focus {
  top: 0.5rem;
}

/* Screen reader only text */

.screen-reader-text,
.srt {
  position: absolute;
  clip-path: polygon(0 0, 0.1% 0, 0.1% 0.1%, 0 0.1%);
}

/* ---------- Layout ---------- */

.grid-layout {
  --cols: 12;

  display: grid;
  gap: 0 var(--gap);
  grid-template-columns:
    1fr repeat(
      var(--cols),
      min(
        calc(
          (var(--container) - (var(--gap) * (var(--cols) + 1))) / var(--cols)
        ),
        calc((100% - (var(--gap) * (var(--cols) + 1))) / var(--cols))
      )
    )
    1fr;
  grid-template-rows: auto auto 1fr auto;

  > * {
    grid-column: 2 / -2;
  }
}

.full {
  grid-column: 1 / -1;
}

.main {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: subgrid;

  > * {
    grid-column: 2 / -2;
  }
}

.cq-sizer {
  container-type: inline-size;
  width: 100%;
}

.push-0 {
  margin-block-end: 0;
}

/* ---------- Sections ---------- */

.section {
  padding-block: 3rem;

  @media (width >= 60rem) {
    padding-block: 6rem;
  }

  &:where(:not(.section--no-grid)) {
    display: grid;
    grid-template-columns: subgrid;
    row-gap: 3rem;
  }
}
